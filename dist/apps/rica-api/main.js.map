{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.service.ts","webpack:///external commonjs \"@yepmind/nats-rx-client\"","webpack:///./src/app/queue/_models/config-options.ts","webpack:///./src/app/queue/queue.service.ts","webpack:///./src/app/app.controller.ts","webpack:///external commonjs \"@nestjs/axios\"","webpack:///external commonjs \"rxjs\"","webpack:///external commonjs \"dayjs\"","webpack:///./src/app/api-bridge/api-bridge.controller.ts","webpack:///./src/app/queue/queue-consumer.service.ts","webpack:///./src/app/queue/queue.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@nestjs/common\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@nestjs/core\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"tslib\");","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Hello API' };\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@yepmind/nats-rx-client\");","import { NatsStreamConfig } from \"@yepmind/nats-rx-client\";\n\nexport interface ConfigOptions {\n    streams: NatsStreamConfig[],\n    servers: string\n}","import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { NatsClientService } from '@yepmind/nats-rx-client';\nimport { ConfigOptions } from './_models/config-options';\n\n@Injectable()\nexport class QueueService {\n    private readonly logger = new Logger(QueueService.name);\n    \n    private nc: NatsClientService;\n\n    constructor(\n        @Inject('CONFIG_OPTIONS') config: ConfigOptions\n    ) {\n        this.nc = new NatsClientService(config);\n    }\n    \n    get client(): NatsClientService {\n        return this.nc;\n    }\n}","import { Controller, Get, Query } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { QueueService } from './queue/queue.service';\n\n@Controller()\nexport class AppController {\n    constructor(\n        private readonly appService: AppService,\n        private queueService: QueueService\n    ) { }\n\n    @Get()\n    getData() {\n        return this.appService.getData();\n    }\n\n    @Get('enqueue')\n    enqueue(@Query('data') data: string) {\n        Array.from(Array(10).keys()).forEach(x => {\n            this.queueService.client.enqueueData('rica_test', 'getReq', `${x} - ${data}`);\n        });\n        return true;\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@nestjs/axios\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"rxjs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"dayjs\");","import { HttpService } from '@nestjs/axios';\nimport { BadRequestException, Body, Controller, Get, HttpCode, Logger, NotFoundException, Post } from '@nestjs/common';\nimport { map, switchMap, tap } from 'rxjs';\nimport { Country } from '../common/country';\nimport dayjs from 'dayjs';\n\n@Controller('api-bridge')\nexport class ApiBridgeController {\n    baseUrls = new Map<Country, string>([\n        ['ch', 'http://risparmiocasa.tecnologica.info/tloyaltyws_svizzera'],\n        ['mt', 'http://risparmiocasa.tecnologica.info/tloyaltyws_malta'],\n        ['it', 'http://risparmiocasa.tecnologica.info/tloyaltyws']\n    ]);\n    private readonly logger = new Logger(ApiBridgeController.name);\n\n    constructor(\n        private readonly httpService: HttpService\n    ){  }\n\n    @Get() \n    hello() {\n        return 'Hello from api-bridge! 👋';\n    }\n\n    @Post('create-card')\n    @HttpCode(200)\n    createCard(@Body() reqBody: { details: { [key: string]: any } & { registrationCountry: Country } }) {\n        return this.createEmptyCard(reqBody.details.registrationCountry).pipe(\n            switchMap(cardNumber => {\n                if (!cardNumber)\n                    throw new BadRequestException();\n\n                return this.addDataToCard(reqBody.details, cardNumber, false).pipe(\n                    map(res => {\n                        if (!res)\n                            throw new BadRequestException();\n                        return { cardNumber };\n                    })\n                );\n            })\n        );\n    }\n\n    @Post('apply-discount')\n    @HttpCode(200)\n    applyDiscount(@Body() reqBody: { store: string, cardNumber: string, points: string, ean: string }) {\n        const { store, cardNumber, points, ean } = reqBody;\n        return this.applyDiscountToCard(store, cardNumber, points, ean).pipe(\n            map(result => {\n                if (!result)\n                    throw new BadRequestException();\n                return true;\n            })\n        );\n    }\n\n    @Post('verify')\n    @HttpCode(200)\n    verify(@Body() reqBody) {\n        const { cardNumber, registrationCountry } = reqBody;\n\n        if (!cardNumber)\n            throw new BadRequestException();\n\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<SaldoTessera2 xmlns=\"http://TLWSSaldi/\">';\n        xml += `<CodTessera>${cardNumber}</CodTessera>`;\n        xml += \"</SaldoTessera2>\";\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n\n        let url = \"http://risparmiocasa.tecnologica.info/TLWSSaldi/Saldi.asmx\";\n\n        if (registrationCountry === 'ch') {\n            url = \"http://risparmiocasa.tecnologica.info/TLWSSaldi_Svizzera/Saldi.asmx\";\n        } else if (registrationCountry === 'mt') {\n            url = \"http://risparmiocasa.tecnologica.info/TLWSSaldi_Malta/Saldi.asmx\"\n        }\n\n        const headers = {\n            SOAPAction: \"http://TLWSSaldi/SaldoTessera2\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n\n        return this.httpService.post(url, xml, { headers }).pipe(\n            map(result => {\n                const isValid = !JSON.stringify(result.data).includes(\n                    \"20000101;20000101;0;0\"\n                );\n\n                if (!isValid)\n                    throw new NotFoundException();\n\n                return true;\n            })\n        );\n    }\n\n    @Post('update-card')\n    @HttpCode(200)\n    updateCard(@Body() reqBody) {\n        const { cardNumber, details, updateFromStore } = reqBody;\n    \n        if (!updateFromStore)\n            details.preferredStoreCode = '000WEB';\n\n        return this.addDataToCard(details, cardNumber, updateFromStore).pipe(\n            map(result => {\n                if (!result)\n                    throw new BadRequestException();\n\n                return { cardNumber };\n            })\n        );\n    }\n\n    private createEmptyCard(registrationCountry: Country) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<NuovaTessera xmlns = \"http://TLoyaltyWS/\">';\n        xml += \"<CodCedi>025</CodCedi>\";\n        xml += `<Username>${process.env.RISPARMIOCASA_API_USERNAME}</Username>`;\n        xml += `<Password>${process.env.RISPARMIOCASA_API_PASSWORD}</Password>`;\n        xml += \"</NuovaTessera>\";\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n    \n        const baseUrl = this.baseUrls.get(registrationCountry);\n        const url = baseUrl + \"/Cards.asmx\";\n        const headers = {\n            SOAPAction: \"http://TLoyaltyWS/NuovaTessera\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n    \n        const regExp = /(?<=<NuovaTesseraResult>).*(?=<\\/NuovaTesseraResult>)/;\n        return this.httpService.post(url, xml, { headers }).pipe(\n            tap(result => this.logger.log(result.data.match(regExp)[0])),\n            map(result => (result.status === 200) ? result.data.match(regExp)[0] : null)\n        );\n    }\n\n    private addDataToCard(details: { [key: string]: any } & { registrationCountry: Country }, cardNumber, updateFromStore) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<InserimentoModificaAnagrafica xmlns=\"http://TLoyaltyWS/\">';\n        xml += `<CodCedi>${updateFromStore ? process.env.RISPARMIOCASA_API_COD_CEDI_STORE : process.env.RISPARMIOCASA_API_COD_CEDI}</CodCedi>`;\n        xml += `<Username>${updateFromStore ? process.env.RISPARMIOCASA_API_USERNAME_STORE : process.env.RISPARMIOCASA_API_USERNAME}</Username>`;\n        xml += `<Password>${updateFromStore ? process.env.RISPARMIOCASA_API_PASSWORD_STORE : process.env.RISPARMIOCASA_API_PASSWORD}</Password>`;\n        xml += `<CodTessera>${cardNumber}</CodTessera>`;\n        xml += \"<StatoTessera>A</StatoTessera>\";\n        xml += \"<Circuito>1</Circuito>\";\n        xml += `<CodECRPV>${details.preferredStoreCode}</CodECRPV>`;\n        xml += `<Cognome>${details.surname}</Cognome>`;\n        xml += `<Nome>${details.name}</Nome>`;\n        xml += `<DataNascita>${details.dateOfBirth.year}-${details.dateOfBirth.month}-${details.dateOfBirth.day}</DataNascita>`;\n        xml += `<Sesso>${details.gender === 1 ? \"M\" : \"F\"}</Sesso>`;\n        xml += `<Indirizzo>${details.address}</Indirizzo>`;\n        xml += `<NumCivico>${details.streetNumber}</NumCivico>`;\n        xml += `<Citta>${details.city}</Citta>`;\n        xml += `<CAP>${details.postalCode}</CAP>`;\n        xml += `<PrefissoTelefono></PrefissoTelefono>`;\n        xml += `<NumTelefono>${details.phoneNumberSecondary}</NumTelefono>`;\n        xml += `<PrefissoCellulare></PrefissoCellulare>`;\n        xml += `<NumCellulare>${details.phoneNumber}</NumCellulare>`;\n        xml += `<Email>${details.email}</Email>`;\n        xml += `<FrequenzaAcquisto>1</FrequenzaAcquisto>`;\n        xml += `<CategoriaTessera>1</CategoriaTessera>`;\n        xml += `<CategoriaTessera2></CategoriaTessera2>`;\n        xml += `<CategoriaTessera3></CategoriaTessera3>`;\n        xml += `<CategoriaTessera4></CategoriaTessera4>`;\n        xml += `<CategoriaTessera5></CategoriaTessera5>`;\n        xml += `<Professione>1</Professione>`;\n        xml += `<Titolo>1</Titolo>`;\n        xml += `<StatoCivile>1</StatoCivile>`;\n        xml += `<TitoloStudio>1</TitoloStudio>`;\n        xml += `<Hobby></Hobby>`;\n        xml += `<TipoFamiliare1>1</TipoFamiliare1>`;\n        xml += `<DataNascitaFamiliare1>1990-01-01</DataNascitaFamiliare1>`;\n        xml += `<TipoFamiliare2>1</TipoFamiliare2>`;\n        xml += `<DataNascitaFamiliare2>1990-01-01</DataNascitaFamiliare2>`;\n        xml += `<TipoFamiliare3>1</TipoFamiliare3>`;\n        xml += `<DataNascitaFamiliare3>1990-01-01</DataNascitaFamiliare3>`;\n        xml += `<TipoFamiliare4>1</TipoFamiliare4>`;\n        xml += `<DataNascitaFamiliare4>1990-01-01</DataNascitaFamiliare4>`;\n        xml += `<TipoFamiliare5>1</TipoFamiliare5>`;\n        xml += `<DataNascitaFamiliare5>1990-01-01</DataNascitaFamiliare5>`;\n        xml += `<ListaAutorizzazioni>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>11</Numero>`;\n        xml += `<Consenso>true</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>5</Numero>`;\n        xml += `<Consenso>${details.marketing}</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>6</Numero>`;\n        xml += `<Consenso>${details.marketing}</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>8</Numero>`;\n        xml += `<Consenso>${details.statistics}</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `</ListaAutorizzazioni>`;\n        xml += `<PVPreferito></PVPreferito>`;\n        if (details.registrationCountry === 'it') {\n            xml += `<Paese>Italia</Paese>`;\n        } else {\n            xml += `<Paese></Paese>`;\n        }\n        xml += `<CodiceFiscale></CodiceFiscale>`;\n        xml += `<FlagCancellato>false</FlagCancellato>`;\n    \n        if (details.registrationCountry === 'ch' && details?.countryOfResidence === 'ch') {\n            xml += `<Nazione>CHE</Nazione>`;\n        } else if (details.registrationCountry === 'mt') {\n            xml += `<Nazione>MLT</Nazione>`;\n        }\n    \n        xml += `</InserimentoModificaAnagrafica>`;\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n    \n        const baseUrl = this.baseUrls.get(details.registrationCountry);\n        const url = baseUrl + '/Cards.asmx';\n        const headers = {\n            SOAPAction: \"http://TLoyaltyWS/InserimentoModificaAnagrafica\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n    \n        const regExp =\n            /(?<=<InserimentoModificaAnagraficaResult>).*(?=<\\/InserimentoModificaAnagraficaResult>)/;\n\n        return this.httpService.post(url, xml, { headers }).pipe(\n            map(result => {\n                const status = result.data.match(regExp)[0];\n                return parseInt(status) >= 0;\n            })\n        );\n    }\n\n    private applyDiscountToCard(store, cardNumber, points, ean) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<SaldoMovimentiPunti xmlns=\"http://webservices.loy4casse.it/\">';\n        xml += `<CodECRPV>${store}</CodECRPV>`;\n        xml += `<CodiceTessera>${cardNumber}</CodiceTessera>`;\n        xml += `<NumeroCassa>99</NumeroCassa>`;\n        xml += `<NumeroScontrino>1</NumeroScontrino>`;\n        xml += `<DataOraScontrino>${dayjs().format(\"YYYY-MM-DD\")}</DataOraScontrino>`;\n        xml += `<TotaleScontrino>0</TotaleScontrino>`;\n        xml += `<ListaInfoRaccolta>`;\n        xml += `<InfoRaccolta>`;\n        xml += `<CodiceRaccolta>2</CodiceRaccolta>`;\n        xml += `<PuntiRaccolta>${points}</PuntiRaccolta>`;\n        xml += `<CodiceVenditaPremio>${ean}</CodiceVenditaPremio>`;\n        xml += `<QuantitaPremi>1</QuantitaPremi>`;\n        xml += `<FlagPrenotazione>0</FlagPrenotazione>`;\n        xml += `</InfoRaccolta>`;\n        xml += `</ListaInfoRaccolta>`;\n        xml += `</SaldoMovimentiPunti>`;\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n    \n        const url =\n            \"http://risparmiocasa.tecnologica.info/Loy4CasseWS/Loy4CasseService.asmx\";\n        const headers = {\n            SOAPAction: \"http://webservices.loy4casse.it/SaldoMovimentiPunti\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n    \n        const regExp =\n            /(?<=<SaldoMovimentiPuntiResult>).*(?=<\\/SaldoMovimentiPuntiResult>)/;\n        \n        return this.httpService.post(url, xml, { headers }).pipe(\n            map(result => {\n                const status = result.data.match(regExp)[0];\n                return parseInt(status) >= 0;\n            })\n        );\n    }\n}","import { Injectable, Logger } from '@nestjs/common';\nimport { QueueService } from './queue.service';\n\n@Injectable()\nexport class QueueConsumerService {\n    private readonly logger = new Logger(QueueConsumerService.name);\n    \n    constructor(\n        private queueService: QueueService\n    ) {\n        this.queueService.client.dequeueData('rica_test', 'getReq').subscribe({\n            next: value => this.logger.log(`[${new Date()}]deQueue: ${value}`)\n        });\n    }\n    \n}","import { DynamicModule, Module } from '@nestjs/common';\nimport { QueueService } from './queue.service';\nimport { ConfigOptions } from './_models/config-options';\nimport { QueueConsumerService } from './queue-consumer.service';\n\n@Module({\n    controllers: [],\n    providers: [],\n})\nexport class QueueModule {\n    static register(options: ConfigOptions): DynamicModule {\n        return {\n          module: QueueModule,\n          providers: [\n            {\n              provide: 'CONFIG_OPTIONS',\n              useValue: options\n            },\n            QueueService,\n            QueueConsumerService\n          ],\n          exports: [\n            QueueService\n          ],\n        };\n    }\n};","import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ApiBridgeController } from './api-bridge/api-bridge.controller';\nimport { HttpModule } from '@nestjs/axios';\nimport { QueueModule } from './queue/queue.module';\nimport { NatsStreamConfig } from '@yepmind/nats-rx-client';\nimport streams from \"./queue/queue-streams-config.json\";\n\n@Module({\n    imports: [\n        HttpModule,\n        QueueModule.register({\n            streams: streams as NatsStreamConfig[],\n            servers: process.env.NATS_SERVERS\n        })\n    ],\n    controllers: [\n        AppController,\n        ApiBridgeController\n    ],\n    providers: [\n        AppService\n    ],\n})\nexport class AppModule { }\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}