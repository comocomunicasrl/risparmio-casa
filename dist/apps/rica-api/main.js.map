{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/api-bridge/api-bridge.controller.ts","webpack:///external commonjs \"@nestjs/axios\"","webpack:///external commonjs \"rxjs\"","webpack:///external commonjs \"dayjs\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ApiBridgeController } from './api-bridge/api-bridge.controller';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n    imports: [\n        HttpModule\n    ],\n    controllers: [\n        AppController,\n        ApiBridgeController\n    ],\n    providers: [AppService],\n})\nexport class AppModule { }\n","module.exports = require(\"tslib\");","import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Hello API' };\n  }\n}\n","import { HttpService } from '@nestjs/axios';\nimport { BadRequestException, Body, Controller, Get, NotFoundException, Post } from '@nestjs/common';\nimport { map, switchMap } from 'rxjs';\nimport { Country } from '../common/country';\nimport dayjs from 'dayjs';\n\n@Controller('api-bridge')\nexport class ApiBridgeController {\n    baseUrls = new Map<Country, string>([\n        ['ch', 'http://risparmiocasa.tecnologica.info/tloyaltyws_svizzera'],\n        ['mt', 'http://risparmiocasa.tecnologica.info/tloyaltyws_malta'],\n        ['it', 'http://risparmiocasa.tecnologica.info/tloyaltyws']\n    ]);\n\n    constructor(\n        private readonly httpService: HttpService\n    ){}\n\n    @Get() \n    hello() {\n        return 'Hello from api-bridge! 👋';\n    }\n\n    @Post('create-card')\n    createCard(@Body() reqBody: { details: { [key: string]: any } & { registrationCountry: Country } }) {\n        return this.createEmptyCard(reqBody.details.registrationCountry).pipe(\n            switchMap(cardNumber => {\n                if (!cardNumber)\n                    throw new BadRequestException();\n\n                return this.addDataToCard(reqBody.details, cardNumber, false).pipe(\n                    map(res => {\n                        if (!res)\n                            throw new BadRequestException();\n                        return { cardNumber };\n                    })\n                );\n            })\n        );\n    }\n\n    @Post('apply-discount')\n    applyDiscount(@Body() reqBody: { store: string, cardNumber: string, points: string, ean: string }) {\n        const { store, cardNumber, points, ean } = reqBody;\n        return this.applyDiscountToCard(store, cardNumber, points, ean).pipe(\n            map(result => {\n                if (!result)\n                    throw new BadRequestException();\n                return true;\n            })\n        );\n    }\n\n    @Post('verify')\n    verify(@Body() reqBody) {\n        const { cardNumber, registrationCountry } = reqBody;\n\n        if (!cardNumber)\n            throw new BadRequestException();\n\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<SaldoTessera2 xmlns=\"http://TLWSSaldi/\">';\n        xml += `<CodTessera>${cardNumber}</CodTessera>`;\n        xml += \"</SaldoTessera2>\";\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n\n        let url = \"http://risparmiocasa.tecnologica.info/TLWSSaldi/Saldi.asmx\";\n\n        if (registrationCountry === 'ch') {\n            url = \"http://risparmiocasa.tecnologica.info/TLWSSaldi_Svizzera/Saldi.asmx\";\n        } else if (registrationCountry === 'mt') {\n            url = \"http://risparmiocasa.tecnologica.info/TLWSSaldi_Malta/Saldi.asmx\"\n        }\n\n        const headers = {\n            SOAPAction: \"http://TLWSSaldi/SaldoTessera2\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n\n        return this.httpService.post(url, xml, { headers }).pipe(\n            map(result => {\n                const isValid = !JSON.stringify(result.data).includes(\n                    \"20000101;20000101;0;0\"\n                );\n\n                if (!isValid)\n                    throw new NotFoundException();\n\n                return true;\n            })\n        );\n    }\n\n    @Post('update-card')\n    updateCard(@Body() reqBody) {\n        const { cardNumber, details, updateFromStore } = reqBody;\n    \n        if (!updateFromStore)\n            details.preferredStoreCode = '000WEB';\n\n        return this.addDataToCard(details, cardNumber, updateFromStore).pipe(\n            map(result => {\n                if (!result)\n                    throw new BadRequestException();\n\n                return { cardNumber };\n            })\n        );\n    }\n\n    private createEmptyCard(registrationCountry: Country) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<NuovaTessera xmlns = \"http://TLoyaltyWS/\">';\n        xml += \"<CodCedi>025</CodCedi>\";\n        xml += `<Username>${process.env.RISPARMIOCASA_API_USERNAME}</Username>`;\n        xml += `<Password>${process.env.RISPARMIOCASA_API_PASSWORD}</Password>`;\n        xml += \"</NuovaTessera>\";\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n    \n        const baseUrl = this.baseUrls.get(registrationCountry);\n        const url = baseUrl + \"/Cards.asmx\";\n        const headers = {\n            SOAPAction: \"http://TLoyaltyWS/NuovaTessera\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n    \n        const regExp = /(?<=<NuovaTesseraResult>).*(?=<\\/NuovaTesseraResult>)/;\n        return this.httpService.post(url, xml, { headers }).pipe(\n            map(result => (result.status === 200) ? result.data.match(regExp)[0] : null)\n        );\n    }\n\n    private addDataToCard(details: { [key: string]: any } & { registrationCountry: Country }, cardNumber, updateFromStore) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<InserimentoModificaAnagrafica xmlns=\"http://TLoyaltyWS/\">';\n        xml += `<CodCedi>${updateFromStore ? process.env.RISPARMIOCASA_API_COD_CEDI_STORE : process.env.RISPARMIOCASA_API_COD_CEDI}</CodCedi>`;\n        xml += `<Username>${updateFromStore ? process.env.RISPARMIOCASA_API_USERNAME_STORE : process.env.RISPARMIOCASA_API_USERNAME}</Username>`;\n        xml += `<Password>${updateFromStore ? process.env.RISPARMIOCASA_API_PASSWORD_STORE : process.env.RISPARMIOCASA_API_PASSWORD}</Password>`;\n        xml += `<CodTessera>${cardNumber}</CodTessera>`;\n        xml += \"<StatoTessera>A</StatoTessera>\";\n        xml += \"<Circuito>1</Circuito>\";\n        xml += `<CodECRPV>${details.preferredStoreCode}</CodECRPV>`;\n        xml += `<Cognome>${details.surname}</Cognome>`;\n        xml += `<Nome>${details.name}</Nome>`;\n        xml += `<DataNascita>${details.dateOfBirth.year}-${details.dateOfBirth.month}-${details.dateOfBirth.day}</DataNascita>`;\n        xml += `<Sesso>${details.gender === 1 ? \"M\" : \"F\"}</Sesso>`;\n        xml += `<Indirizzo>${details.address}</Indirizzo>`;\n        xml += `<NumCivico>${details.streetNumber}</NumCivico>`;\n        xml += `<Citta>${details.city}</Citta>`;\n        xml += `<CAP>${details.postalCode}</CAP>`;\n        xml += `<PrefissoTelefono></PrefissoTelefono>`;\n        xml += `<NumTelefono>${details.phoneNumberSecondary}</NumTelefono>`;\n        xml += `<PrefissoCellulare></PrefissoCellulare>`;\n        xml += `<NumCellulare>${details.phoneNumber}</NumCellulare>`;\n        xml += `<Email>${details.email}</Email>`;\n        xml += `<FrequenzaAcquisto>1</FrequenzaAcquisto>`;\n        xml += `<CategoriaTessera>1</CategoriaTessera>`;\n        xml += `<CategoriaTessera2></CategoriaTessera2>`;\n        xml += `<CategoriaTessera3></CategoriaTessera3>`;\n        xml += `<CategoriaTessera4></CategoriaTessera4>`;\n        xml += `<CategoriaTessera5></CategoriaTessera5>`;\n        xml += `<Professione>1</Professione>`;\n        xml += `<Titolo>1</Titolo>`;\n        xml += `<StatoCivile>1</StatoCivile>`;\n        xml += `<TitoloStudio>1</TitoloStudio>`;\n        xml += `<Hobby></Hobby>`;\n        xml += `<TipoFamiliare1>1</TipoFamiliare1>`;\n        xml += `<DataNascitaFamiliare1>1990-01-01</DataNascitaFamiliare1>`;\n        xml += `<TipoFamiliare2>1</TipoFamiliare2>`;\n        xml += `<DataNascitaFamiliare2>1990-01-01</DataNascitaFamiliare2>`;\n        xml += `<TipoFamiliare3>1</TipoFamiliare3>`;\n        xml += `<DataNascitaFamiliare3>1990-01-01</DataNascitaFamiliare3>`;\n        xml += `<TipoFamiliare4>1</TipoFamiliare4>`;\n        xml += `<DataNascitaFamiliare4>1990-01-01</DataNascitaFamiliare4>`;\n        xml += `<TipoFamiliare5>1</TipoFamiliare5>`;\n        xml += `<DataNascitaFamiliare5>1990-01-01</DataNascitaFamiliare5>`;\n        xml += `<ListaAutorizzazioni>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>11</Numero>`;\n        xml += `<Consenso>true</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>5</Numero>`;\n        xml += `<Consenso>${details.marketing}</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>6</Numero>`;\n        xml += `<Consenso>${details.marketing}</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `<Autorizzazione>`;\n        xml += `<Numero>8</Numero>`;\n        xml += `<Consenso>${details.statistics}</Consenso>`;\n        xml += `<Data>${dayjs().format(\"YYYY-MM-DD\")}</Data>`;\n        xml += `</Autorizzazione>`;\n        xml += `</ListaAutorizzazioni>`;\n        xml += `<PVPreferito></PVPreferito>`;\n        if (details.registrationCountry === 'it') {\n            xml += `<Paese>Italia</Paese>`;\n        } else {\n            xml += `<Paese></Paese>`;\n        }\n        xml += `<CodiceFiscale></CodiceFiscale>`;\n        xml += `<FlagCancellato>false</FlagCancellato>`;\n    \n        if (details.registrationCountry === 'ch' && details?.countryOfResidence === 'ch') {\n            xml += `<Nazione>CHE</Nazione>`;\n        } else if (details.registrationCountry === 'mt') {\n            xml += `<Nazione>MLT</Nazione>`;\n        }\n    \n        xml += `</InserimentoModificaAnagrafica>`;\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n    \n        const baseUrl = this.baseUrls.get(details.registrationCountry);\n        const url = baseUrl + '/Cards.asmx';\n        const headers = {\n            SOAPAction: \"http://TLoyaltyWS/InserimentoModificaAnagrafica\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n    \n        const regExp =\n            /(?<=<InserimentoModificaAnagraficaResult>).*(?=<\\/InserimentoModificaAnagraficaResult>)/;\n\n        return this.httpService.post(url, xml, { headers }).pipe(\n            map(result => {\n                const status = result.data.match(regExp)[0];\n                return parseInt(status) >= 0;\n            })\n        );\n    }\n\n    private applyDiscountToCard(store, cardNumber, points, ean) {\n        let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?>';\n        xml +=\n            '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">';\n        xml += \"<soap:Body>\";\n        xml += '<SaldoMovimentiPunti xmlns=\"http://webservices.loy4casse.it/\">';\n        xml += `<CodECRPV>${store}</CodECRPV>`;\n        xml += `<CodiceTessera>${cardNumber}</CodiceTessera>`;\n        xml += `<NumeroCassa>99</NumeroCassa>`;\n        xml += `<NumeroScontrino>1</NumeroScontrino>`;\n        xml += `<DataOraScontrino>${dayjs().format(\"YYYY-MM-DD\")}</DataOraScontrino>`;\n        xml += `<TotaleScontrino>0</TotaleScontrino>`;\n        xml += `<ListaInfoRaccolta>`;\n        xml += `<InfoRaccolta>`;\n        xml += `<CodiceRaccolta>2</CodiceRaccolta>`;\n        xml += `<PuntiRaccolta>${points}</PuntiRaccolta>`;\n        xml += `<CodiceVenditaPremio>${ean}</CodiceVenditaPremio>`;\n        xml += `<QuantitaPremi>1</QuantitaPremi>`;\n        xml += `<FlagPrenotazione>0</FlagPrenotazione>`;\n        xml += `</InfoRaccolta>`;\n        xml += `</ListaInfoRaccolta>`;\n        xml += `</SaldoMovimentiPunti>`;\n        xml += \"</soap:Body>\";\n        xml += \"</soap:Envelope>\";\n    \n        const url =\n            \"http://risparmiocasa.tecnologica.info/Loy4CasseWS/Loy4CasseService.asmx\";\n        const headers = {\n            SOAPAction: \"http://webservices.loy4casse.it/SaldoMovimentiPunti\",\n            \"Content-Type\": \"text/xml; charset=UTF-8\"\n        };\n    \n        const regExp =\n            /(?<=<SaldoMovimentiPuntiResult>).*(?=<\\/SaldoMovimentiPuntiResult>)/;\n        \n        return this.httpService.post(url, xml, { headers }).pipe(\n            map(result => {\n                const status = result.data.match(regExp)[0];\n                return parseInt(status) >= 0;\n            })\n        );\n    }\n}","module.exports = require(\"@nestjs/axios\");","module.exports = require(\"rxjs\");","module.exports = require(\"dayjs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}